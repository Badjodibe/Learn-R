---
title: "types primitives"
format: pdf
editor: visual
---

Bien s√ªr ! Voici un r√©sum√© clair des **types de donn√©es primitifs en R**, avec **exemples de cr√©ation et de manipulation** pour chacun :

------------------------------------------------------------------------

### üî¢ **1. Num√©rique (`numeric`)**

Repr√©sente les nombres d√©cimaux (par d√©faut `double`).

```{r}
x <- 3.14        # cr√©ation
x + 2            # addition
x * 10           # multiplication
is.numeric(x)    # TRUE
```

------------------------------------------------------------------------

### üî¢ **2. Entier (`integer`)**

Nombre entier avec un `L` pour sp√©cifier.

```{r}
y <- 10L
y + 5L           # addition
typeof(y)        # "integer"
is.integer(y)    # TRUE
```

------------------------------------------------------------------------

### üìù **3. Caract√®re (`character`)**

Cha√Ænes de texte.

```{r}
nom <- "Analyse"
paste(nom, "de donn√©es")     # "Analyse de donn√©es"
nchar(nom)                   # nombre de caract√®res
toupper(nom)                 # "ANALYSE"
```

------------------------------------------------------------------------

### ‚úÖ **4. Logique (`logical`)**

Bool√©ens : `TRUE` ou `FALSE`.

```{r}
a <- TRUE
b <- FALSE
a & b        # FALSE (ET logique)
a | b        # TRUE (OU logique)
!a           # FALSE (NON logique)
```

------------------------------------------------------------------------

### üîÆ **5. Complexe (`complex`)**

Nombres complexes (peu courant sauf en science).

```{r}
z <- 2 + 3i
Mod(z)        # module
Re(z)         # partie r√©elle
Im(z)         # partie imaginaire
```

------------------------------------------------------------------------

### üö´ **6. Null & NA**

Absence ou manque de valeur.

```{r}
a <- NULL      # vide
b <- NA        # manquant

is.null(a)     # TRUE
is.na(b)       # TRUE
```

------------------------------------------------------------------------

Op√©ration

Parfait ! Voici un r√©capitulatif clair et pratique des **op√©rations que tu peux effectuer sur les types de donn√©es primitifs en R**, √† int√©grer facilement dans ton document Quarto ou √† utiliser pour ton cours.

------------------------------------------------------------------------

## üî¢ **1. Num√©rique (`numeric`)**

```{r}
x <- 7.5
y <- 2.5

# Op√©rations arithm√©tiques
x + y     # addition
x - y     # soustraction
x * y     # multiplication
x / y     # division
x ^ 2     # puissance
sqrt(x)   # racine carr√©e

# Fonctions utiles
round(x)       # arrondir
floor(x)       # arrondi inf√©rieur
ceiling(x)     # arrondi sup√©rieur
```

------------------------------------------------------------------------

## üî¢ **2. Entier (`integer`)**

```{r}
a <- 10L
b <- 3L

# M√™me op√©rations que numeric
a %% b     # modulo (reste de division)
a %/% b    # division enti√®re

# V√©rification
is.integer(a)
```

------------------------------------------------------------------------

## üìù **3. Caract√®re (`character`)**

```{r}
nom <- "R"
texte <- "Analyse de donn√©es"

# Concat√©nation
paste(nom, texte)            # "R Analyse de donn√©es"
paste0(nom, texte)           # "RAnalyse de donn√©es"

# Transformation
toupper(texte)               # "ANALYSE DE DONN√âES"
tolower(texte)               # "analyse de donn√©es"

# Sous-cha√Ænes
substr(texte, 1, 7)          # "Analyse"

# Longueur
nchar(texte)                 # nombre de caract√®res
```

------------------------------------------------------------------------

## ‚úÖ **4. Logique (`logical`)**

```{r}
vrai <- TRUE
faux <- FALSE

# Op√©rations logiques
vrai & faux      # ET logique => FALSE
vrai | faux      # OU logique => TRUE
!vrai            # NON logique => FALSE

# Comparaisons
x <- 5
x > 3            # TRUE
x == 5           # TRUE
x != 4           # TRUE
```

------------------------------------------------------------------------

## üîÆ **5. Complexe (`complex`)**

```{r}
z <- 2 + 3i
w <- 1 + 2i

# Op√©rations
z + w            # addition
z * w            # multiplication

# Fonctions utiles
Mod(z)           # module
Re(z)            # partie r√©elle
Im(z)            # partie imaginaire
Conj(z)          # conjug√©
```
